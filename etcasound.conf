# ~/.asoundrc  Read by ALSA (JACK, if using ALSA backend)

ctl.!default {
	type hw
	card 0
}

# Here, two 2 stereo devs being merged into 1 4-channel psuedo-device

pcm.merge {
    type multi;
    slaves.a.pcm hw:0
    slaves.a.channels 2;
    slaves.b.pcm hw:1
    slaves.b.channels 2;
    bindings.0.slave a;
    bindings.0.channel 0;
    bindings.1.slave b;
    bindings.1.channel 0;
    bindings.2.slave a;
    bindings.2.channel 1;
    bindings.3.slave b;
    bindings.3.channel 1;
}

# Device name: merge. Use anywhere you use hw:0, hw:HDA, hw:DSP, plughw:1
# "hw:0"(hw:1) as first (second) component/slave of slave.a.pcm (slave.b.pcm)
# Mapping above: first channel is first component, 2nd channel 2nd component,
# 3rd from the first component and 4th from the second component.
# Complex part of definition is channel mappings defined by the bindings lines.
# Channel mapping definition consists of a pair of a lines of the following:
#
# bindings.CH_PSEUDO_DEVICE.slave SLAVE_DEV_THAT_PROVIDE_THIS_CH
# bindings.CH_OF_PSEUDO_DEVICE.channel CH_OF_SLAVE_DEVICE_THAT_PROVIDE_THIS_CH
#So the specific pair of lines:
#
#    bindings.0.slave a;
#    bindings.0.channel 0;
# Mean "channel 0 of the pseudo-device corresponds to channel 0 of first slave
#
#The Control Pseudo-device
#In theory, the above is enough to define a new pseudo-device,
# but applications, including JACK's ALSA backend, want a "control device"
#
# Here is a dummy (non-functional?) one to keep the apps happy
ctl.merge {
    type hw
    card 0
}

# The name following ctl same as the name following pcm. in dev definition.
# The control dev we've given here means "the control device associated with
# "merge", is the control device associated with the first installed device.
# You can merge more than 2 devices - the resulting pcm.DEVICE-NAME
# will include more lines.
# "Slave" Device naming
# You are better off using "hw:CARD" device names, rather than "hw:N" names
# when defining a "multi" pseudo-device. But if using multiple instances of
# the same type of hardware (say, 4 RME Multiface devices), you must use "hw:N"
# because every card will have the same "CARD" name.
# This will not ensure that "hw:0" always refers to the same audio interface
# because there is no ALSA name that uniquely defines a particular PCI slot.
# This is an unsolved problem when using multiple identical devices (USB).

pcm.!default merge

#pcm.!default {
#	type hw
#	card 0
#}

#ctl.!default {
#	type hw
#	card 0
#}
